"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const ava_1 = require("ava");
const keyboard_1 = require("./keyboard");
ava_1.default('no buttons', async (t) => {
    const k = new keyboard_1.Keyboard();
    const result = await k.render(undefined, '/');
    t.deepEqual(result, []);
});
ava_1.default('pass through url button', async (t) => {
    const k = new keyboard_1.Keyboard();
    k.add(false, { text: 'foo', url: 'https://edjopato.de' });
    const result = await k.render(undefined, '/');
    t.deepEqual(result, [[{
                text: 'foo',
                url: 'https://edjopato.de'
            }]]);
});
ava_1.default('pass through url button creator', async (t) => {
    const k = new keyboard_1.Keyboard();
    k.add(false, () => ({ text: 'foo', url: 'https://edjopato.de' }));
    const result = await k.render(undefined, '/');
    t.deepEqual(result, [[{
                text: 'foo',
                url: 'https://edjopato.de'
            }]]);
});
ava_1.default('callback button template', async (t) => {
    const k = new keyboard_1.Keyboard();
    k.add(false, { text: 'foo', relativePath: 'bar' });
    const result = await k.render(undefined, '/');
    t.deepEqual(result, [[{
                text: 'foo',
                callback_data: '/bar'
            }]]);
});
ava_1.default('callback button template below path', async (t) => {
    const k = new keyboard_1.Keyboard();
    k.add(false, { text: 'foo', relativePath: 'bar' });
    const result = await k.render(undefined, '/somewhere/in/menus/');
    t.deepEqual(result, [[{
                text: 'foo',
                callback_data: '/somewhere/in/menus/bar'
            }]]);
});
ava_1.default('two buttons', async (t) => {
    const k = new keyboard_1.Keyboard();
    k.add(false, { text: 'foo', url: 'https://edjopato.de' });
    k.add(false, { text: 'bar', url: 'https://edjopato.de' });
    const result = await k.render(undefined, '/');
    t.deepEqual(result, [
        [
            {
                text: 'foo',
                url: 'https://edjopato.de'
            }
        ],
        [
            {
                text: 'bar',
                url: 'https://edjopato.de'
            }
        ]
    ]);
});
ava_1.default('two buttons same row', async (t) => {
    const k = new keyboard_1.Keyboard();
    k.add(false, { text: 'foo', url: 'https://edjopato.de' });
    k.add(true, { text: 'bar', url: 'https://edjopato.de' });
    const result = await k.render(undefined, '/');
    t.deepEqual(result, [
        [
            {
                text: 'foo',
                url: 'https://edjopato.de'
            },
            {
                text: 'bar',
                url: 'https://edjopato.de'
            }
        ]
    ]);
});
ava_1.default('creator creating nothing', async (t) => {
    const k = new keyboard_1.Keyboard();
    k.addCreator(() => []);
    const result = await k.render(undefined, '/');
    t.deepEqual(result, []);
});
ava_1.default('creator creating url button', async (t) => {
    const k = new keyboard_1.Keyboard();
    k.addCreator(() => [[{
                text: 'foo',
                url: 'https://edjopato.de'
            }]]);
    const result = await k.render(undefined, '/');
    t.deepEqual(result, [[{
                text: 'foo',
                url: 'https://edjopato.de'
            }]]);
});
ava_1.default('hints too long callback data', async (t) => {
    const ten = '0123456789';
    const k = new keyboard_1.Keyboard();
    k.add(false, { text: 'bla', relativePath: ten + ten + ten });
    await t.throwsAsync(async () => {
        await k.render(undefined, `/${ten}${ten}/${ten}${ten}${ten}/`);
    }, { message: /callback_data only supports 1-64 bytes/ });
});
//# sourceMappingURL=keyboard.test.js.map